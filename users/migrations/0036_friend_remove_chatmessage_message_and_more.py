# Generated by Django 4.0.4 on 2022-06-21 12:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0035_thread_chatmessage'),
    ]

    operations = [
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
        ),
        migrations.RemoveField(
            model_name='chatmessage',
            name='message',
        ),
        migrations.RemoveField(
            model_name='chatmessage',
            name='thread',
        ),
        migrations.RemoveField(
            model_name='chatmessage',
            name='timestamp',
        ),
        migrations.RemoveField(
            model_name='chatmessage',
            name='user',
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='body',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='msg_receiver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='msg_receiver', to='users.profile'),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='msg_sender',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='msg_sender', to='users.profile'),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='seen',
            field=models.BooleanField(default=False),
        ),
        migrations.DeleteModel(
            name='Thread',
        ),
        migrations.AddField(
            model_name='profile',
            name='friends',
            field=models.ManyToManyField(related_name='my_friends', to='users.friend'),
        ),
    ]
